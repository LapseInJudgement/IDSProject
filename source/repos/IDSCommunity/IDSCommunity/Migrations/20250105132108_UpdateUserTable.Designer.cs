// <auto-generated />
using System;
using IDSCommunityProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDSCommunityProject.Migrations
{
    [DbContext(typeof(IdscommunityPlatformContext))]
    [Migration("20250105132108_UpdateUserTable")]
    partial class UpdateUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDSCommunityProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC27DF43C480");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Comment__3214EC27F6935449");

                    b.HasIndex(new[] { "CreatedAt" }, "CreatedAt");

                    b.HasIndex(new[] { "PostId" }, "PostID");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Follow", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FolloweeId")
                        .HasColumnType("int")
                        .HasColumnName("FolloweeID");

                    b.Property<int>("FollowerId")
                        .HasColumnType("int")
                        .HasColumnName("FollowerID");

                    b.HasKey("Id")
                        .HasName("PK__Follow__3214EC2762B33C81");

                    b.HasIndex(new[] { "FollowerId", "FolloweeId" }, "FollwID");

                    b.ToTable("Follow", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MediaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedID");

                    b.Property<string>("RelatedType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MediaId")
                        .HasName("PK__Media__B2C2B5AFB9FA6661");

                    b.HasIndex(new[] { "RelatedId" }, "RelatedID");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Moderation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("Id")
                        .HasName("PK__Moderati__3214EC27E89F65DC");

                    b.HasIndex(new[] { "RoleId", "RelatedId" }, "MdID");

                    b.ToTable("Moderation", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReactionId")
                        .HasColumnType("int")
                        .HasColumnName("ReactionID");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedID");

                    b.Property<string>("RelatedType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC27FF0EE10D");

                    b.HasIndex("ReactionId");

                    b.HasIndex(new[] { "CreatedAt" }, "CreatedAt");

                    b.HasIndex(new[] { "CreatedAt" }, "ReactionID");

                    b.HasIndex(new[] { "CreatedAt" }, "RelatedID");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PermissionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PermissionId")
                        .HasName("PK__Permissi__EFA6FB0F831AAA54");

                    b.HasIndex(new[] { "ActionName" }, "UQ__Permissi__491F5DD0FD6E9C89")
                        .IsUnique();

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC270C43D3B2");

                    b.HasIndex(new[] { "CreatedAt" }, "CreatedAt");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReactionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedID");

                    b.Property<string>("RelatedType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Reaction__3214EC271FC38109");

                    b.HasIndex(new[] { "CreatedAt" }, "RelatedID");

                    b.HasIndex(new[] { "UserId" }, "UserID");

                    b.ToTable("Reaction", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReportedType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Report__3214EC272687F329");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex(new[] { "UserId", "PostId", "CommentId" }, "RepID");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Role__8AFACE3A266D50DE");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("PermissionID");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("Id")
                        .HasName("PK__RolePerm__3214EC27E5B4F93D");

                    b.HasIndex("PermissionId");

                    b.HasIndex(new[] { "RoleId", "PermissionId" }, "RolePID");

                    b.ToTable("RolePermission", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Location");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__USER__3214EC276C474E1B");

                    b.HasIndex(new[] { "Email" }, "Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UserName")
                        .IsUnique();

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.UserCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__UserCate__3214EC2775323F03");

                    b.ToTable("UserCategory", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__UserRole__3214EC27112C9BEC");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "RoleId", "UserId" }, "UserRID");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Comment", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Comment");

                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Moderation", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Role", "Role")
                        .WithMany("Moderations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Role_Mod");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Notification", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Reaction", "Reaction")
                        .WithMany("Notifications")
                        .HasForeignKey("ReactionId")
                        .IsRequired()
                        .HasConstraintName("FK_Reaction_Notf");

                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Notf");

                    b.Navigation("Reaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Post", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Reaction", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("Reactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Reaction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Report", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Comment", "Comment")
                        .WithMany("Reports")
                        .HasForeignKey("CommentId")
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Report");

                    b.HasOne("IDSCommunityProject.Models.Post", "Post")
                        .WithMany("Reports")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Report");

                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Report");

                    b.Navigation("Comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.RolePermission", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Permission");

                    b.HasOne("IDSCommunityProject.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Role");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.UserRole", b =>
                {
                    b.HasOne("IDSCommunityProject.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Role_Permission");

                    b.HasOne("IDSCommunityProject.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Comment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Reaction", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.Role", b =>
                {
                    b.Navigation("Moderations");

                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("IDSCommunityProject.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");

                    b.Navigation("Reactions");

                    b.Navigation("Reports");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
