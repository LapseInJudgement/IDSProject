openapi: 3.0.1
info:
  title: IDSCommunityProject
  version: "1.0"
servers:
- url: /
paths:
  /api/category:
    get:
      tags:
      - Category
      operationId: apiCategoryGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Category
    post:
      tags:
      - Category
      operationId: apiCategoryPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Category
  /api/category/{id}:
    get:
      tags:
      - Category
      operationId: apiCategoryIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Category
    put:
      tags:
      - Category
      operationId: apiCategoryIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Category
    delete:
      tags:
      - Category
      operationId: apiCategoryIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Category
  /api/Comment:
    get:
      tags:
      - Comment
      operationId: apiCommentGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
    post:
      tags:
      - Comment
      operationId: apiCommentPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          text/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/Comment/{Id}:
    get:
      tags:
      - Comment
      operationId: apiCommentIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/Comment/{id}:
    put:
      tags:
      - Comment
      operationId: apiCommentIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          text/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
    delete:
      tags:
      - Comment
      operationId: apiCommentIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/Comment/{postId}/Reactions:
    get:
      tags:
      - Comment
      operationId: apiCommentPostIdReactionsGET
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/Comment/{commentId}/Reactions:
    post:
      tags:
      - Comment
      operationId: apiCommentCommentIdReactionsPOST
      parameters:
      - name: commentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
          text/json:
            schema:
              $ref: '#/components/schemas/Reaction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/Comment/{postId}/Reactions/{reactionId}:
    delete:
      tags:
      - Comment
      operationId: apiCommentPostIdReactionsReactionIdDELETE
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reactionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Comment
  /api/follow:
    get:
      tags:
      - Follow
      operationId: apiFollowGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Follow
    post:
      tags:
      - Follow
      operationId: apiFollowPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          text/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Follow'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Follow
  /api/follow/{id}:
    get:
      tags:
      - Follow
      operationId: apiFollowIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Follow
    put:
      tags:
      - Follow
      operationId: apiFollowIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          text/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Follow'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Follow
    delete:
      tags:
      - Follow
      operationId: apiFollowIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Follow
  /api/media:
    get:
      tags:
      - Media
      operationId: apiMediaGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Media
    post:
      tags:
      - Media
      operationId: apiMediaPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
          text/json:
            schema:
              $ref: '#/components/schemas/Media'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Media
  /api/media/{id}:
    get:
      tags:
      - Media
      operationId: apiMediaIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Media
    put:
      tags:
      - Media
      operationId: apiMediaIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
          text/json:
            schema:
              $ref: '#/components/schemas/Media'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Media
    delete:
      tags:
      - Media
      operationId: apiMediaIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Media
  /api/moderation:
    get:
      tags:
      - Moderation
      operationId: apiModerationGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Moderation
    post:
      tags:
      - Moderation
      operationId: apiModerationPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moderation'
          text/json:
            schema:
              $ref: '#/components/schemas/Moderation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Moderation'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Moderation
  /api/moderation/{id}:
    get:
      tags:
      - Moderation
      operationId: apiModerationIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Moderation
    put:
      tags:
      - Moderation
      operationId: apiModerationIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moderation'
          text/json:
            schema:
              $ref: '#/components/schemas/Moderation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Moderation'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Moderation
    delete:
      tags:
      - Moderation
      operationId: apiModerationIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Moderation
  /api/Notification:
    get:
      tags:
      - NotificationApi
      operationId: apiNotificationGET
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
      x-swagger-router-controller: NotificationApi
    post:
      tags:
      - NotificationApi
      operationId: apiNotificationPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          text/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Notification'
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
            text/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-swagger-router-controller: NotificationApi
  /api/Notification/{id}:
    get:
      tags:
      - NotificationApi
      operationId: apiNotificationIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Notification'
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
            text/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-swagger-router-controller: NotificationApi
    put:
      tags:
      - NotificationApi
      operationId: apiNotificationIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          text/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: NotificationApi
    delete:
      tags:
      - NotificationApi
      operationId: apiNotificationIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: NotificationApi
  /api/Permission:
    get:
      tags:
      - PermissionApi
      operationId: apiPermissionGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: PermissionApi
    post:
      tags:
      - PermissionApi
      operationId: apiPermissionPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          text/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: PermissionApi
  /api/Permission/{id}:
    get:
      tags:
      - PermissionApi
      operationId: apiPermissionIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: PermissionApi
    put:
      tags:
      - PermissionApi
      operationId: apiPermissionIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          text/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: PermissionApi
    delete:
      tags:
      - PermissionApi
      operationId: apiPermissionIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: PermissionApi
  /api/Post:
    get:
      tags:
      - Post
      operationId: apiPostGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
    post:
      tags:
      - Post
      operationId: apiPostPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          text/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
  /api/Post/{id}:
    get:
      tags:
      - Post
      operationId: apiPostIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
    put:
      tags:
      - Post
      operationId: apiPostIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          text/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
    delete:
      tags:
      - Post
      operationId: apiPostIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
  /api/Post/{postId}/Reactions:
    get:
      tags:
      - Post
      operationId: apiPostPostIdReactionsGET
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
    post:
      tags:
      - Post
      operationId: apiPostPostIdReactionsPOST
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
          text/json:
            schema:
              $ref: '#/components/schemas/Reaction'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
  /api/Post/{postId}/Reactions/{reactionId}:
    delete:
      tags:
      - Post
      operationId: apiPostPostIdReactionsReactionIdDELETE
      parameters:
      - name: postId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reactionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Post
  /api/Role:
    get:
      tags:
      - Role
      operationId: apiRoleGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Role
    post:
      tags:
      - Role
      operationId: apiRolePOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          text/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Role
  /api/Role/{id}:
    get:
      tags:
      - Role
      operationId: apiRoleIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Role
    put:
      tags:
      - Role
      operationId: apiRoleIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          text/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Role
    delete:
      tags:
      - Role
      operationId: apiRoleIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Role
  /api/rolePermission:
    get:
      tags:
      - RolePermission
      operationId: apiRolePermissionGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: RolePermission
    post:
      tags:
      - RolePermission
      operationId: apiRolePermissionPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
          text/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RolePermission'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: RolePermission
  /api/rolePermission/{id}:
    get:
      tags:
      - RolePermission
      operationId: apiRolePermissionIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: RolePermission
    put:
      tags:
      - RolePermission
      operationId: apiRolePermissionIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
          text/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RolePermission'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: RolePermission
    delete:
      tags:
      - RolePermission
      operationId: apiRolePermissionIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: RolePermission
  /api/user:
    get:
      tags:
      - User
      operationId: apiUserGET
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      x-swagger-router-controller: User
    post:
      tags:
      - User
      operationId: apiUserPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
      x-swagger-router-controller: User
  /api/user/{id}:
    get:
      tags:
      - User
      operationId: apiUserIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
      x-swagger-router-controller: User
    put:
      tags:
      - User
      operationId: apiUserIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: User
    delete:
      tags:
      - User
      operationId: apiUserIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: User
  /api/userCategory:
    get:
      tags:
      - UserCategory
      operationId: apiUserCategoryGET
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserCategory
    post:
      tags:
      - UserCategory
      operationId: apiUserCategoryPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCategory'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserCategory
  /api/userCategory/{id}:
    get:
      tags:
      - UserCategory
      operationId: apiUserCategoryIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserCategory
    put:
      tags:
      - UserCategory
      operationId: apiUserCategoryIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCategory'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserCategory
    delete:
      tags:
      - UserCategory
      operationId: apiUserCategoryIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserCategory
  /api/userRole:
    get:
      tags:
      - UserRole
      operationId: apiUserRoleGET
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
      x-swagger-router-controller: UserRole
    post:
      tags:
      - UserRole
      operationId: apiUserRolePOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
          text/json:
            schema:
              $ref: '#/components/schemas/UserRole'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserRole'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserRole'
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
            text/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      x-swagger-router-controller: UserRole
  /api/userRole/{id}:
    get:
      tags:
      - UserRole
      operationId: apiUserRoleIdGET
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserRole'
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
            text/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      x-swagger-router-controller: UserRole
    put:
      tags:
      - UserRole
      operationId: apiUserRoleIdPUT
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
          text/json:
            schema:
              $ref: '#/components/schemas/UserRole'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserRole'
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserRole
    delete:
      tags:
      - UserRole
      operationId: apiUserRoleIdDELETE
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
      x-swagger-router-controller: UserRole
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        postId:
          type: integer
          format: int32
        content:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        post:
          $ref: '#/components/schemas/Post'
        reports:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Report'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        reports:
        - null
        - null
        deletedAt: 2000-01-23T04:56:07.000+00:00
        post:
          createdAt: 2000-01-23T04:56:07.000+00:00
          reports:
          - reason: reason
            reportedType: reportedType
            post: null
            commentId: 4
            comment: null
            id: 6
            postId: 1
            userId: 7
            user: null
            status: status
          - reason: reason
            reportedType: reportedType
            post: null
            commentId: 4
            comment: null
            id: 6
            postId: 1
            userId: 7
            user: null
            status: status
          deletedAt: 2000-01-23T04:56:07.000+00:00
          comments:
          - null
          - null
          id: 1
          title: title
          userId: 1
          user: null
          content: content
        id: 4
        postId: 1
        userId: 7
        user: null
        content: content
    Follow:
      type: object
      properties:
        id:
          type: integer
          format: int32
        followerId:
          type: integer
          format: int32
        followeeId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    Media:
      type: object
      properties:
        mediaId:
          type: integer
          format: int32
        relatedType:
          type: string
          nullable: true
        relatedId:
          type: integer
          format: int32
        mediaUrl:
          type: string
          nullable: true
        mediaType:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    Moderation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: integer
          format: int32
        relatedId:
          type: integer
          format: int32
        reason:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
      example:
        reason: reason
        createdAt: 2000-01-23T04:56:07.000+00:00
        role: null
        roleId: 9
        id: 8
        relatedId: 6
    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        reactionId:
          type: integer
          format: int32
        relatedId:
          type: integer
          format: int32
        relatedType:
          type: string
          nullable: true
        actionType:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        message:
          type: string
          nullable: true
        isRead:
          type: boolean
          nullable: true
        reaction:
          $ref: '#/components/schemas/Reaction'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        actionType: actionType
        createdAt: 2000-01-23T04:56:07.000+00:00
        relatedType: relatedType
        reaction:
          createdAt: 2000-01-23T04:56:07.000+00:00
          relatedType: relatedType
          reactionType: reactionType
          id: 5
          userId: 2
          user:
            country: country
            reports:
            - null
            - null
            comments:
            - createdAt: 2000-01-23T04:56:07.000+00:00
              reports:
              - null
              - null
              deletedAt: 2000-01-23T04:56:07.000+00:00
              post:
                createdAt: 2000-01-23T04:56:07.000+00:00
                reports:
                - reason: reason
                  reportedType: reportedType
                  post: null
                  commentId: 4
                  comment: null
                  id: 6
                  postId: 1
                  userId: 7
                  user: null
                  status: status
                - reason: reason
                  reportedType: reportedType
                  post: null
                  commentId: 4
                  comment: null
                  id: 6
                  postId: 1
                  userId: 7
                  user: null
                  status: status
                deletedAt: 2000-01-23T04:56:07.000+00:00
                comments:
                - null
                - null
                id: 1
                title: title
                userId: 1
                user: null
                content: content
              id: 4
              postId: 1
              userId: 7
              user: null
              content: content
            - createdAt: 2000-01-23T04:56:07.000+00:00
              reports:
              - null
              - null
              deletedAt: 2000-01-23T04:56:07.000+00:00
              post:
                createdAt: 2000-01-23T04:56:07.000+00:00
                reports:
                - reason: reason
                  reportedType: reportedType
                  post: null
                  commentId: 4
                  comment: null
                  id: 6
                  postId: 1
                  userId: 7
                  user: null
                  status: status
                - reason: reason
                  reportedType: reportedType
                  post: null
                  commentId: 4
                  comment: null
                  id: 6
                  postId: 1
                  userId: 7
                  user: null
                  status: status
                deletedAt: 2000-01-23T04:56:07.000+00:00
                comments:
                - null
                - null
                id: 1
                title: title
                userId: 1
                user: null
                content: content
              id: 4
              postId: 1
              userId: 7
              user: null
              content: content
            roleId: 3
            posts:
            - null
            - null
            passwordHash: passwordHash
            userRoles:
            - role:
                userRoles:
                - null
                - null
                moderations:
                - reason: reason
                  createdAt: 2000-01-23T04:56:07.000+00:00
                  role: null
                  roleId: 9
                  id: 8
                  relatedId: 6
                - reason: reason
                  createdAt: 2000-01-23T04:56:07.000+00:00
                  role: null
                  roleId: 9
                  id: 8
                  relatedId: 6
                rolePermissions:
                - permissionId: 1
                  role: null
                  roleId: 6
                  permission:
                    permissionId: 2
                    rolePermissions:
                    - null
                    - null
                    actionName: actionName
                  id: 3
                - permissionId: 1
                  role: null
                  roleId: 6
                  permission:
                    permissionId: 2
                    rolePermissions:
                    - null
                    - null
                    actionName: actionName
                  id: 3
                roleName: roleName
                id: 6
              roleId: 9
              id: 5
              userId: 9
              user: null
            - role:
                userRoles:
                - null
                - null
                moderations:
                - reason: reason
                  createdAt: 2000-01-23T04:56:07.000+00:00
                  role: null
                  roleId: 9
                  id: 8
                  relatedId: 6
                - reason: reason
                  createdAt: 2000-01-23T04:56:07.000+00:00
                  role: null
                  roleId: 9
                  id: 8
                  relatedId: 6
                rolePermissions:
                - permissionId: 1
                  role: null
                  roleId: 6
                  permission:
                    permissionId: 2
                    rolePermissions:
                    - null
                    - null
                    actionName: actionName
                  id: 3
                - permissionId: 1
                  role: null
                  roleId: 6
                  permission:
                    permissionId: 2
                    rolePermissions:
                    - null
                    - null
                    actionName: actionName
                  id: 3
                roleName: roleName
                id: 6
              roleId: 9
              id: 5
              userId: 9
              user: null
            isDeleted: true
            reactions:
            - null
            - null
            id: 9
            email: email
            age: 2
            notifications:
            - null
            - null
            username: username
          notifications:
          - null
          - null
          relatedId: 7
        reactionId: 1
        isRead: true
        id: 0
        message: message
        userId: 6
        user: null
        relatedId: 5
    Permission:
      type: object
      properties:
        permissionId:
          type: integer
          format: int32
        actionName:
          type: string
          nullable: true
        rolePermissions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RolePermission'
      additionalProperties: false
      example:
        permissionId: 2
        rolePermissions:
        - null
        - null
        actionName: actionName
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Comment'
        reports:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Report'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        reports:
        - reason: reason
          reportedType: reportedType
          post: null
          commentId: 4
          comment: null
          id: 6
          postId: 1
          userId: 7
          user: null
          status: status
        - reason: reason
          reportedType: reportedType
          post: null
          commentId: 4
          comment: null
          id: 6
          postId: 1
          userId: 7
          user: null
          status: status
        deletedAt: 2000-01-23T04:56:07.000+00:00
        comments:
        - null
        - null
        id: 1
        title: title
        userId: 1
        user: null
        content: content
    Reaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        relatedType:
          type: string
          nullable: true
        relatedId:
          type: integer
          format: int32
        reactionType:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        notifications:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Notification'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        relatedType: relatedType
        reactionType: reactionType
        id: 5
        userId: 2
        user:
          country: country
          reports:
          - null
          - null
          comments:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            reports:
            - null
            - null
            deletedAt: 2000-01-23T04:56:07.000+00:00
            post:
              createdAt: 2000-01-23T04:56:07.000+00:00
              reports:
              - reason: reason
                reportedType: reportedType
                post: null
                commentId: 4
                comment: null
                id: 6
                postId: 1
                userId: 7
                user: null
                status: status
              - reason: reason
                reportedType: reportedType
                post: null
                commentId: 4
                comment: null
                id: 6
                postId: 1
                userId: 7
                user: null
                status: status
              deletedAt: 2000-01-23T04:56:07.000+00:00
              comments:
              - null
              - null
              id: 1
              title: title
              userId: 1
              user: null
              content: content
            id: 4
            postId: 1
            userId: 7
            user: null
            content: content
          - createdAt: 2000-01-23T04:56:07.000+00:00
            reports:
            - null
            - null
            deletedAt: 2000-01-23T04:56:07.000+00:00
            post:
              createdAt: 2000-01-23T04:56:07.000+00:00
              reports:
              - reason: reason
                reportedType: reportedType
                post: null
                commentId: 4
                comment: null
                id: 6
                postId: 1
                userId: 7
                user: null
                status: status
              - reason: reason
                reportedType: reportedType
                post: null
                commentId: 4
                comment: null
                id: 6
                postId: 1
                userId: 7
                user: null
                status: status
              deletedAt: 2000-01-23T04:56:07.000+00:00
              comments:
              - null
              - null
              id: 1
              title: title
              userId: 1
              user: null
              content: content
            id: 4
            postId: 1
            userId: 7
            user: null
            content: content
          roleId: 3
          posts:
          - null
          - null
          passwordHash: passwordHash
          userRoles:
          - role:
              userRoles:
              - null
              - null
              moderations:
              - reason: reason
                createdAt: 2000-01-23T04:56:07.000+00:00
                role: null
                roleId: 9
                id: 8
                relatedId: 6
              - reason: reason
                createdAt: 2000-01-23T04:56:07.000+00:00
                role: null
                roleId: 9
                id: 8
                relatedId: 6
              rolePermissions:
              - permissionId: 1
                role: null
                roleId: 6
                permission:
                  permissionId: 2
                  rolePermissions:
                  - null
                  - null
                  actionName: actionName
                id: 3
              - permissionId: 1
                role: null
                roleId: 6
                permission:
                  permissionId: 2
                  rolePermissions:
                  - null
                  - null
                  actionName: actionName
                id: 3
              roleName: roleName
              id: 6
            roleId: 9
            id: 5
            userId: 9
            user: null
          - role:
              userRoles:
              - null
              - null
              moderations:
              - reason: reason
                createdAt: 2000-01-23T04:56:07.000+00:00
                role: null
                roleId: 9
                id: 8
                relatedId: 6
              - reason: reason
                createdAt: 2000-01-23T04:56:07.000+00:00
                role: null
                roleId: 9
                id: 8
                relatedId: 6
              rolePermissions:
              - permissionId: 1
                role: null
                roleId: 6
                permission:
                  permissionId: 2
                  rolePermissions:
                  - null
                  - null
                  actionName: actionName
                id: 3
              - permissionId: 1
                role: null
                roleId: 6
                permission:
                  permissionId: 2
                  rolePermissions:
                  - null
                  - null
                  actionName: actionName
                id: 3
              roleName: roleName
              id: 6
            roleId: 9
            id: 5
            userId: 9
            user: null
          isDeleted: true
          reactions:
          - null
          - null
          id: 9
          email: email
          age: 2
          notifications:
          - null
          - null
          username: username
        notifications:
        - null
        - null
        relatedId: 7
    Report:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        postId:
          type: integer
          format: int32
        commentId:
          type: integer
          format: int32
        reportedType:
          type: string
          nullable: true
        reason:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        comment:
          $ref: '#/components/schemas/Comment'
        post:
          $ref: '#/components/schemas/Post'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        reason: reason
        reportedType: reportedType
        post: null
        commentId: 4
        comment: null
        id: 6
        postId: 1
        userId: 7
        user: null
        status: status
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
        moderations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Moderation'
        rolePermissions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RolePermission'
        userRoles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UserRole'
      additionalProperties: false
      example:
        userRoles:
        - null
        - null
        moderations:
        - reason: reason
          createdAt: 2000-01-23T04:56:07.000+00:00
          role: null
          roleId: 9
          id: 8
          relatedId: 6
        - reason: reason
          createdAt: 2000-01-23T04:56:07.000+00:00
          role: null
          roleId: 9
          id: 8
          relatedId: 6
        rolePermissions:
        - permissionId: 1
          role: null
          roleId: 6
          permission:
            permissionId: 2
            rolePermissions:
            - null
            - null
            actionName: actionName
          id: 3
        - permissionId: 1
          role: null
          roleId: 6
          permission:
            permissionId: 2
            rolePermissions:
            - null
            - null
            actionName: actionName
          id: 3
        roleName: roleName
        id: 6
    RolePermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: integer
          format: int32
        permissionId:
          type: integer
          format: int32
        permission:
          $ref: '#/components/schemas/Permission'
        role:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
      example:
        permissionId: 1
        role: null
        roleId: 6
        permission:
          permissionId: 2
          rolePermissions:
          - null
          - null
          actionName: actionName
        id: 3
    User:
      required:
      - username
      type: object
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        age:
          type: integer
          format: int32
          nullable: true
        passwordHash:
          type: string
          nullable: true
        isDeleted:
          type: boolean
        comments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Comment'
        notifications:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Notification'
        posts:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Post'
        reactions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Reaction'
        reports:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Report'
        userRoles:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UserRole'
      additionalProperties: false
      example:
        country: country
        reports:
        - null
        - null
        comments:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          reports:
          - null
          - null
          deletedAt: 2000-01-23T04:56:07.000+00:00
          post:
            createdAt: 2000-01-23T04:56:07.000+00:00
            reports:
            - reason: reason
              reportedType: reportedType
              post: null
              commentId: 4
              comment: null
              id: 6
              postId: 1
              userId: 7
              user: null
              status: status
            - reason: reason
              reportedType: reportedType
              post: null
              commentId: 4
              comment: null
              id: 6
              postId: 1
              userId: 7
              user: null
              status: status
            deletedAt: 2000-01-23T04:56:07.000+00:00
            comments:
            - null
            - null
            id: 1
            title: title
            userId: 1
            user: null
            content: content
          id: 4
          postId: 1
          userId: 7
          user: null
          content: content
        - createdAt: 2000-01-23T04:56:07.000+00:00
          reports:
          - null
          - null
          deletedAt: 2000-01-23T04:56:07.000+00:00
          post:
            createdAt: 2000-01-23T04:56:07.000+00:00
            reports:
            - reason: reason
              reportedType: reportedType
              post: null
              commentId: 4
              comment: null
              id: 6
              postId: 1
              userId: 7
              user: null
              status: status
            - reason: reason
              reportedType: reportedType
              post: null
              commentId: 4
              comment: null
              id: 6
              postId: 1
              userId: 7
              user: null
              status: status
            deletedAt: 2000-01-23T04:56:07.000+00:00
            comments:
            - null
            - null
            id: 1
            title: title
            userId: 1
            user: null
            content: content
          id: 4
          postId: 1
          userId: 7
          user: null
          content: content
        roleId: 3
        posts:
        - null
        - null
        passwordHash: passwordHash
        userRoles:
        - role:
            userRoles:
            - null
            - null
            moderations:
            - reason: reason
              createdAt: 2000-01-23T04:56:07.000+00:00
              role: null
              roleId: 9
              id: 8
              relatedId: 6
            - reason: reason
              createdAt: 2000-01-23T04:56:07.000+00:00
              role: null
              roleId: 9
              id: 8
              relatedId: 6
            rolePermissions:
            - permissionId: 1
              role: null
              roleId: 6
              permission:
                permissionId: 2
                rolePermissions:
                - null
                - null
                actionName: actionName
              id: 3
            - permissionId: 1
              role: null
              roleId: 6
              permission:
                permissionId: 2
                rolePermissions:
                - null
                - null
                actionName: actionName
              id: 3
            roleName: roleName
            id: 6
          roleId: 9
          id: 5
          userId: 9
          user: null
        - role:
            userRoles:
            - null
            - null
            moderations:
            - reason: reason
              createdAt: 2000-01-23T04:56:07.000+00:00
              role: null
              roleId: 9
              id: 8
              relatedId: 6
            - reason: reason
              createdAt: 2000-01-23T04:56:07.000+00:00
              role: null
              roleId: 9
              id: 8
              relatedId: 6
            rolePermissions:
            - permissionId: 1
              role: null
              roleId: 6
              permission:
                permissionId: 2
                rolePermissions:
                - null
                - null
                actionName: actionName
              id: 3
            - permissionId: 1
              role: null
              roleId: 6
              permission:
                permissionId: 2
                rolePermissions:
                - null
                - null
                actionName: actionName
              id: 3
            roleName: roleName
            id: 6
          roleId: 9
          id: 5
          userId: 9
          user: null
        isDeleted: true
        reactions:
        - null
        - null
        id: 9
        email: email
        age: 2
        notifications:
        - null
        - null
        username: username
    UserCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
      additionalProperties: false
    UserRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
        roleId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        role:
          $ref: '#/components/schemas/Role'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
      example:
        role:
          userRoles:
          - null
          - null
          moderations:
          - reason: reason
            createdAt: 2000-01-23T04:56:07.000+00:00
            role: null
            roleId: 9
            id: 8
            relatedId: 6
          - reason: reason
            createdAt: 2000-01-23T04:56:07.000+00:00
            role: null
            roleId: 9
            id: 8
            relatedId: 6
          rolePermissions:
          - permissionId: 1
            role: null
            roleId: 6
            permission:
              permissionId: 2
              rolePermissions:
              - null
              - null
              actionName: actionName
            id: 3
          - permissionId: 1
            role: null
            roleId: 6
            permission:
              permissionId: 2
              rolePermissions:
              - null
              - null
              actionName: actionName
            id: 3
          roleName: roleName
          id: 6
        roleId: 9
        id: 5
        userId: 9
        user: null
